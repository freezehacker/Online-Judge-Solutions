题意是：当移除某座城市时，剩下的所有城市需要再修筑多少条公路才能连通起来？因为移除了某个点，与它有关的所有边也跟着移除，这时候剩下的就是一堆点集，问需要多少条边可以让这些点集成为一个大的点集。

简单想想就知道，如果剩下的点集有n个，那么答案就是（n + 1）。

顺着思路来，可以感觉到，是用“并查集”来求。“并查集”的使用场景就像本题一样，是基于n个点集的。修筑一条马路，就是让某两个点并入同一个点集。

这里有个小小的转弯，就是如果我们一开始根据给的所有边构造了并查集（一个father数组），最后要移除点和它的有关边的时候，会不知所措，因为并查集中没有将某个点移出某个点集的算法（就算有，也许也比较麻烦，在此我们不需要硬着来）。其实，我们完全可以在一开始，就不要把与“移除点”有关的边考虑进去，也就是构造了一个不包括“移除点”的并查集，然后再去算并查集的数目，这个才是正确的思。

BTW，这里有个小小的缺点就是：每次check一个点，都要重新构造一次并查集。

BTW again，可以把check和answer的映射关系缓存起来（使用map之类的数据结构），当check较多的时候，会省一些时间。这就是典型的“update-check”问题的典型的解决方案。
